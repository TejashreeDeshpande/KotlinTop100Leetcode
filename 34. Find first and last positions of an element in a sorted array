34. Find first and last positions of an element in a sorted array
// Given a sorted array arr[] with possibly duplicate elements, the task is to find indexes of the first and last occurrences of an element x in the given array. 

// Examples: 

// Input : arr[] = {1, 3, 5, 5, 5, 5, 67, 123, 125}, x = 5
// Output : First Occurrence = 2
//          Last Occurrence = 5
// Input : arr[] = {1, 3, 5, 5, 5, 5, 7, 123, 125 }, x = 7
// Output : First Occurrence = 6
//          Last Occurrence = 6

fun main(args: Array<String>) {
	var arr = arrayOf(1, 2, 2, 2, 2, 3, 4, 7, 8, 8)
    println("Numbers: ${arr.joinToString(" ")}")
    val target = 2
    // For first occurrence
    val first = search(arr, target, true)
    // For last occurrence
    val last = search(arr, target, false)

    println("First Occurrence of $target = $first")
    println("Last Occurrence of $target = $last")
}
fun search(nums: Array<Int>, target: Int, findStartIndex: Boolean) : Int {

    // if target is present in arr[] then returns the index of FIRST occurrence,
    // LAST occurrence of target in arr[0..n-1], otherwise returns -1
    
    var ans = -1
    var start = 0
    var end = nums.size - 1

    while (start <= end) {
        var mid = start + (end - start) / 2
 
        if (target < nums[mid]) {
            end = mid - 1
        } else if (target > nums[mid]) {
            start = mid + 1
        } else {
            // potential ans found
            ans = mid;
            if (findStartIndex) {
                end = mid - 1
            } else {
                start = mid + 1
            }
        }       
    }
    return ans
}
