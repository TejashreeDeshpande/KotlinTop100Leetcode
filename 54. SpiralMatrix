// 54. Spiral Matrix
// Given an m x n matrix, return all elements of the matrix in spiral order.
// Example 1:
// Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
// Output: [1,2,3,6,9,8,7,4,5]

// Example 2:
// Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
// Output: [1,2,3,4,8,12,11,10,9,5,6,7]

fun main(args: Array<String>) {
	val matrix : Array<Array<Int>> = 
    			arrayOf( 
                    arrayOf(1, 2, 3, 4),
                    arrayOf(5, 6, 7, 8),
                    arrayOf(9, 10, 11, 12)
                    )
 
    printSpiralMatrix(matrix, 0, 0, matrix.size, matrix[0].size)
}

fun printSpiralMatrix(matrix: Array<Array<Int>>, i: Int, j: Int, m: Int, n: Int) {    
    // If i or j lies outside the matrix
    if (i >= m || j >= n) { return }
 
    // Print First Row
    for (p in i until n) {  print("${matrix[i][p]} ") }
 
    // Print Last Column
    for (p in i + 1 until m) { print("${matrix[p][n - 1]} ") }
 
    // Print Last Row, if Last and First Row are not same
    if ((m - 1) != i) {
        for (p in n - 2 downTo j) {
            print("${matrix[m - 1][p]} ")
        }
    }
    // Print First Column, if Last and First Column are not same
    if ((n - 1) != j) {
        for (p in m - 2 downTo i+1) {
                print("${matrix[p][j]} ")
         }
    }
    printSpiralMatrix(matrix, i + 1, j + 1, m - 1, n - 1)
}
