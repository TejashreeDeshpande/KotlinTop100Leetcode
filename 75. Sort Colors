// 75. Sort Colors
//Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

//We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

//You must solve this problem without using the library's sort function.

fun main() {    
    //val numbers = intArrayOf(2,0,2,1,1,0)
    val numbers = intArrayOf(2,0,1)
    
	sortColors(numbers)
}

fun sortColors(numbers: IntArray) {
    var left = 0
    var mid = 0
    var right = numbers.size - 1
    
    while (mid <= right) {
        when (numbers[mid]) {
            2 -> {
                // swap with right
                val temp = numbers[right]
                numbers[right] = numbers[mid]
                numbers[mid] = temp
                
                right -= 1
            }
            1 -> {
                // increment mid
                mid += 1
            }
            else -> {
                //swap with left
                val temp = numbers[left]
                numbers[left] = numbers[mid]
                numbers[mid] = temp
                
                mid += 1
                left += 1
            }
        }   
    }
    println(numbers.joinToString(" "))
}
