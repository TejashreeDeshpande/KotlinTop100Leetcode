/*
find longest palindromic substring from given string
 */
public static String longestPalindromic(String str) {
    if (str == null || str.length() <= 1) return str;
    int start = 0;
    int end = 0;
    for (int i = 0; i < str.length(); i++) {
        int len1 = expand(str, i, i);

        int len2 = expand(str, i, i + 1);
        int len = Math.max(len1, len2);
        if (len > end - start) {
            start = i - (len - 1) / 2;
            end = i + len / 2;
        }

    }

    return str.substring(start, end + 1);
}

/**
 * check both left and right from given index
 *
 * @param str
 * @param start
 * @param end
 * @return
 */
private static int expand(String str, int start, int end) {
    while (start >= 0 && end < str.length() && str.charAt(start) == str.charAt(end)) {
        start--;
        end++;
    }
    return end - start - 1;
}
